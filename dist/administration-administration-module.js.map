{"version":3,"sources":["webpack:///./src/app/administration/administration.module.ts","webpack:///./src/app/administration/administration.routing.ts","webpack:///./src/app/administration/dashboard/admindashboard.component.css","webpack:///./src/app/administration/dashboard/admindashboard.component.html","webpack:///./src/app/administration/dashboard/admindashboard.component.ts","webpack:///./src/app/administration/maps/adminmaps.component.html","webpack:///./src/app/administration/maps/adminmaps.component.ts","webpack:///./src/app/administration/users/add/adduserform.component.html","webpack:///./src/app/administration/users/add/adduserform.component.ts","webpack:///./src/app/administration/users/add/field-error-display/field-error-display.component.css","webpack:///./src/app/administration/users/add/field-error-display/field-error-display.component.html","webpack:///./src/app/administration/users/add/field-error-display/field-error-display.component.ts","webpack:///./src/app/administration/users/add/password-validator.component.ts","webpack:///./src/app/administration/users/adminusers.component.css","webpack:///./src/app/administration/users/adminusers.component.html","webpack:///./src/app/administration/users/adminusers.component.ts"],"names":[],"mappings":"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","file":"administration-administration-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../app.module';\n\nimport { AdministrationRoutes } from './administration.routing';\nimport { AdminUsersComponent } from './users/adminusers.component';\nimport { AddUserFormComponent } from './users/add/adduserform.component';\nimport { FieldErrorDisplayComponent } from './users/add/field-error-display/field-error-display.component';\nimport { NouisliderModule } from 'ng2-nouislider';\nimport { TagInputModule } from 'ngx-chips';\nimport { AdminMapsComponent } from './maps/adminmaps.component';\nimport { AdminDashboardComponent } from './dashboard/admindashboard.component';\nimport { MdModule } from '../md/md.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(AdministrationRoutes),\n    FormsModule,\n    ReactiveFormsModule,\n    NouisliderModule,\n    TagInputModule,\n    MdModule,\n    MaterialModule\n  ],\n  declarations: [\n      AdminUsersComponent,\n      AddUserFormComponent,\n      AdminMapsComponent,\n      AdminDashboardComponent,\n      FieldErrorDisplayComponent\n  ]\n})\n\nexport class AdministrationModule {}\n","import { Routes } from '@angular/router';\n\nimport { AdminUsersComponent } from './users/adminusers.component';\nimport { AddUserFormComponent } from './users/add/adduserform.component';\nimport { AdminMapsComponent } from './maps/adminmaps.component';\nimport { AdminDashboardComponent } from './dashboard/admindashboard.component';\n\n\nexport const AdministrationRoutes: Routes = [\n    {\n      path: '',\n      children: [ \n        {\n            path: 'users',\n            children: [\n                {\n                    path: '',\n                    component: AdminUsersComponent\n                },\n                {\n                    path: 'add',\n                    component: AddUserFormComponent\n                }\n            ]\n        },{\n            path: 'maps',\n            children: [\n                {\n                    path: '',\n                    component: AdminMapsComponent\n                }\n            ]\n        },{\n            path: 'dashboard',\n            children: [\n                {\n                    path: '',\n                    component: AdminDashboardComponent\n                }\n            ]\n        }]\n    }\n];\n","module.exports = \".mapimg{\\n    background-image: url('image_placeholder2.jpeg');\\n    background-size: cover;\\n    width: 100%;\\n    border-radius: 6px;\\n    pointer-events: none;\\n    box-shadow: 0 5px 15px -8px rgba(0, 0, 0, 0.24), 0 8px 10px -5px rgba(0, 0, 0, 0.2);\\n    vertical-align: middle;\\n    border-style: none;\\n    height: 220px;\\n    overflow: hidden;\\n    -webkit-filter: brightness(97%);\\n            filter: brightness(97%)\\n}\\n#map{\\n    display: none;\\n}\"","module.exports = \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <h4>CMPaaS General Statistics</h4>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\n            <div class=\\\"card card-stats\\\">\\n              <div class=\\\"card-header card-header-success card-header-icon\\\">\\n                <div class=\\\"card-icon\\\">\\n                  <i class=\\\"material-icons\\\">device_hub</i>\\n                </div>\\n                <p class=\\\"card-category\\\">Concept Maps</p>\\n                <h3 class=\\\"card-title\\\">{{this.user.maps.length}}</h3>\\n              </div>\\n              <div class=\\\"card-footer\\\">\\n                <div class=\\\"stats\\\">\\n                  <i class=\\\"material-icons text-success\\\">plus_one</i>\\n                  <a routerLink=\\\"/edit/cmap\\\" class=\\\"text-primary\\\" href=\\\"\\\">Create a new...</a>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\n            <div class=\\\"card card-stats\\\">\\n              <div class=\\\"card-header card-header-warning card-header-icon\\\">\\n                <div class=\\\"card-icon\\\">\\n                  <i class=\\\"material-icons\\\">group</i>\\n                </div>\\n                <p class=\\\"card-category\\\">Groups</p>\\n                <h3 class=\\\"card-title\\\">{{this.user.groups.length}}</h3>\\n              </div>\\n              <div class=\\\"card-footer\\\">\\n                <div class=\\\"stats\\\">\\n                  <i class=\\\"material-icons text-warning\\\">group_add</i> \\n                  <a routerLink=\\\"/edit/cmap\\\" class=\\\"text-primary\\\" href=\\\"\\\"> Manage your groups...</a>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\n            <div class=\\\"card card-stats\\\">\\n              <div class=\\\"card-header card-header-danger card-header-icon\\\">\\n                <div class=\\\"card-icon\\\">\\n                    <i class=\\\"fas fa-user-tag\\\"></i>\\n                </div>\\n                <p class=\\\"card-category\\\">Following</p>\\n                <h3 class=\\\"card-title\\\">45</h3>\\n              </div>\\n              <div class=\\\"card-footer\\\">\\n                <div class=\\\"stats\\\">\\n                  <i class=\\\"material-icons text-danger\\\">timeline</i> \\n                  <a routerLink=\\\"/edit/cmap\\\" class=\\\"text-primary\\\" href=\\\"\\\"> View timeline...</a>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\n            <div class=\\\"card card-stats\\\">\\n              <div class=\\\"card-header card-header-info card-header-icon\\\">\\n                <div class=\\\"card-icon\\\">\\n                  <i class=\\\"fa fa-twitter\\\"></i>\\n                </div>\\n                <p class=\\\"card-category\\\">Followers</p>\\n                <h3 class=\\\"card-title\\\">+245</h3>\\n              </div>\\n              <div class=\\\"card-footer\\\">\\n                <div class=\\\"stats\\\">\\n                  <i class=\\\"material-icons text-info\\\">share</i> \\n                  <a routerLink=\\\"/edit/cmap\\\" class=\\\"text-primary\\\" href=\\\"\\\"> Manage your maps access level...</a>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                  <div class=\\\"card-header card-header-success card-header-icon\\\">\\n                    <div class=\\\"card-icon\\\">\\n                      <i class=\\\"material-icons\\\"></i>\\n                    </div>\\n                    <h4 class=\\\"card-title\\\">Users by Country</h4>\\n                  </div>\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-6\\\">\\n                                <app-md-table *ngIf=\\\"this.loaded\\\"\\n                                  [data]=\\\"tableData\\\">\\n                              </app-md-table>\\n                            </div>\\n                            <div class=\\\"col-md-6 ml-auto mr-auto\\\">\\n                                <div id=\\\"worldMap\\\" class=\\\"map\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"card card-chart\\\">\\n            <div class=\\\"card-header card-header-rose\\\" data-header-animation=\\\"true\\\">\\n              <div class=\\\"ct-chart\\\" id=\\\"websiteViewsChart\\\"></div>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"card-actions\\\">\\n                <button mat-raised-button type=\\\"button\\\" class=\\\"btn btn-danger btn-link fix-broken-card\\\">\\n                  <i class=\\\"material-icons\\\">build</i> Fix Header!\\n                </button>\\n                <button mat-raised-button type=\\\"button\\\" class=\\\"btn btn-info btn-link\\\" matTooltip=\\\"Refresh\\\" [matTooltipPosition]=\\\"'below'\\\">\\n                  <i class=\\\"material-icons\\\">refresh</i>\\n                </button>\\n                <button mat-raised-button type=\\\"button\\\" class=\\\"btn btn-default btn-link\\\" matTooltip=\\\"Change Date\\\" [matTooltipPosition]=\\\"'below'\\\">\\n                  <i class=\\\"material-icons\\\">edit</i>\\n                </button>\\n              </div>\\n              <h4 class=\\\"card-title\\\">Website Views</h4>\\n              <p class=\\\"card-category\\\">Last Campaign Performance</p>\\n            </div>\\n            <div class=\\\"card-footer\\\">\\n              <div class=\\\"stats\\\">\\n                <i class=\\\"material-icons\\\">access_time</i> campaign sent 2 days ago\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"card card-chart\\\">\\n            <div class=\\\"card-header card-header-success\\\" data-header-animation=\\\"true\\\">\\n              <div class=\\\"ct-chart\\\" id=\\\"dailySalesChart\\\"></div>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"card-actions\\\">\\n                <button mat-raised-button type=\\\"button\\\" class=\\\"btn btn-danger btn-link fix-broken-card\\\">\\n                  <i class=\\\"material-icons\\\">build</i> Fix Header!\\n                </button>\\n                <button mat-raised-button type=\\\"button\\\" class=\\\"btn btn-info btn-link\\\" matTooltip=\\\"Refresh\\\" [matTooltipPosition]=\\\"'below'\\\">\\n                  <i class=\\\"material-icons\\\">refresh</i>\\n                </button>\\n                <button mat-raised-button type=\\\"button\\\" class=\\\"btn btn-default btn-link\\\" matTooltip=\\\"Change Date\\\" [matTooltipPosition]=\\\"'below'\\\">\\n                  <i class=\\\"material-icons\\\">edit</i>\\n                </button>\\n              </div>\\n              <h4 class=\\\"card-title\\\">Daily Sales</h4>\\n              <p class=\\\"card-category\\\">\\n                <span class=\\\"text-success\\\"><i class=\\\"fa fa-long-arrow-up\\\"></i> 55% </span> increase in today sales.</p>\\n            </div>\\n            <div class=\\\"card-footer\\\">\\n              <div class=\\\"stats\\\">\\n                <i class=\\\"material-icons\\\">access_time</i> updated 4 minutes ago\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"card card-chart\\\">\\n            <div class=\\\"card-header card-header-info\\\" data-header-animation=\\\"true\\\">\\n              <div class=\\\"ct-chart\\\" id=\\\"completedTasksChart\\\"></div>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"card-actions\\\">\\n                <button mat-raised-button type=\\\"button\\\" class=\\\"btn btn-danger btn-link fix-broken-card\\\">\\n                  <i class=\\\"material-icons\\\">build</i> Fix Header!\\n                </button>\\n                <button mat-raised-button type=\\\"button\\\" class=\\\"btn btn-info btn-link\\\" matTooltip=\\\"Refresh\\\" [matTooltipPosition]=\\\"'below'\\\">\\n                  <i class=\\\"material-icons\\\">refresh</i>\\n                </button>\\n                <button mat-raised-button type=\\\"button\\\" class=\\\"btn btn-default btn-link\\\" matTooltip=\\\"Change Date\\\" [matTooltipPosition]=\\\"'below'\\\">\\n                  <i class=\\\"material-icons\\\">edit</i>\\n                </button>\\n              </div>\\n              <h4 class=\\\"card-title\\\">Completed Tasks</h4>\\n              <p class=\\\"card-category\\\">Last Campaign Performance</p>\\n            </div>\\n            <div class=\\\"card-footer\\\">\\n              <div class=\\\"stats\\\">\\n                <i class=\\\"material-icons\\\">access_time</i> campaign sent 2 days ago\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n</div>\\n<div id=\\\"map\\\" #myDiagramDiv></div>\"","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { TableData } from '../../md/md-table/md-table.component';\nimport { LegendItem, ChartType } from '../../md/md-chart/md-chart.component';\nimport { SafeHtml, DomSanitizer } from '@angular/platform-browser';\nimport * as go from 'gojs';\nimport * as Chartist from 'chartist';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService, VersionService, MapService, MeService } from '../../_services/index.service';\nimport { User, ConceptMap, Version } from '../../_models/index.model';\nimport { map } from 'rxjs-compat/operator/map';\nimport { Router } from '@angular/router';\n\ndeclare const $: any;\n\nvar myDiagram: go.Diagram;\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admindashboard.component.html',\n  styleUrls: ['./admindashboard.component.css']\n})\nexport class AdminDashboardComponent implements OnInit, AfterViewInit {\n\n  @ViewChild('myDiagramDiv')\n  element: ElementRef;\n\n  private images:SafeHtml[] = new Array<SafeHtml>();\n  private idMap:String[] = new Array<String>();\n  private globalInfo: Object[];\n  public loaded: boolean = false;\n  public tableData: TableData;\n  public user:User;\n  public maps: ConceptMap[];\n  public versions: Version[] = new Array<Version>();\n\n  constructor(\n      private http: HttpClient, \n      private _sanitizer: DomSanitizer, \n      private authServicve: AuthService,\n      private versionService: VersionService,\n      private mapService: MapService,\n      private meService: MeService,\n      private router:Router\n  ){\n      this.user = JSON.parse(authServicve.getCurrentUser());\n  }\n  startAnimationForLineChart(chart: any) {\n      let seq: any, delays: any, durations: any;\n      seq = 0;\n      delays = 80;\n      durations = 500;\n      chart.on('draw', function(data: any) {\n\n        if (data.type === 'line' || data.type === 'area') {\n          data.element.animate({\n            d: {\n              begin: 600,\n              dur: 700,\n              from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\n              to: data.path.clone().stringify(),\n              easing: Chartist.Svg.Easing.easeOutQuint\n            }\n          });\n        } else if (data.type === 'point') {\n              seq++;\n              data.element.animate({\n                opacity: {\n                  begin: seq * delays,\n                  dur: durations,\n                  from: 0,\n                  to: 1,\n                  easing: 'ease'\n                }\n              });\n          }\n      });\n\n      seq = 0;\n  }\n  startAnimationForBarChart(chart: any) {\n      let seq2: any, delays2: any, durations2: any;\n      seq2 = 0;\n      delays2 = 80;\n      durations2 = 500;\n      chart.on('draw', function(data: any) {\n        if (data.type === 'bar') {\n            seq2++;\n            data.element.animate({\n              opacity: {\n                begin: seq2 * delays2,\n                dur: durations2,\n                from: 0,\n                to: 1,\n                easing: 'ease'\n              }\n            });\n        }\n      });\n\n      seq2 = 0;\n  }\n  // constructor(private navbarTitleService: NavbarTitleService) { }\n  public populate() {\n      let total:any = 0;\n      let arr:string[][] = new Array<string[]>();\n      this.globalInfo.forEach((el:any) => total+=el.count);\n\n      this.globalInfo.forEach(function(el:any) {\n          if(el._id) arr.push([el.countryCode, el._id, el.count, Math.round(((el.count/total)*100)*10)/10+'%']);\n          else arr.push(['unknow', 'Unknow', el.count, Math.round(((el.count/total)*100)*10)/10+'%']);\n      });\n    this.tableData = {\n        headerRow: ['ID', 'Name', 'Salary', 'Country', 'City'],\n        dataRows: arr\n     };\n     this.loaded = true;\n  }\n  public ngOnInit() {\n      this.meService.updateDashboardMaps()\n        .subscribe(maps => {\n            this.maps = maps;\n            this.meService.updateDashboardMapsVersions(this.maps)\n                .subscribe(versions => {\n                    versions.forEach(v => {\n                        this.versions.findIndex(item => item.map._id == v.map._id) === -1 ? this.versions.push(v) : {} ;\n                    });\n                    let serializer = new XMLSerializer();\n                    let svg;\n                    for(let i = 0; i < (this.versions.length > 3 ? 3 : this.versions.length); i++){\n                        myDiagram.model = go.Model.fromJson(this.versions[i].content);\n                        this.idMap[i] = this.versions[i].map._id;\n                        svg = myDiagram.makeSvg({\n                            scale:0.5,\n                            maxSize: new go.Size(NaN, 220)\n                        });\n                        this.images[i] = this._sanitizer.bypassSecurityTrustHtml(serializer.serializeToString(svg));\n                    }\n                });\n        }, error => console.log(error));\n\n    \n\n\n\n\n\n      this.http.get('http://localhost:3000/v1/users/globalInfo')\n        .subscribe(data => {\n            this.globalInfo = data as Object[];\n            this.populate();\n        }, error => console.log(error));\n      /* ----------==========     Daily Sales Chart initialization    ==========---------- */\n\n      const dataDailySalesChart = {\n          labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n          series: [\n              [12, 17, 7, 17, 23, 18, 38]\n          ]\n      };\n\n     const optionsDailySalesChart = {\n          lineSmooth: Chartist.Interpolation.cardinal({\n              tension: 0\n          }),\n          low: 0,\n          high: 50, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n          chartPadding: { top: 0, right: 0, bottom: 0, left: 0},\n      };\n\n      const dailySalesChart = new Chartist.Line('#dailySalesChart', dataDailySalesChart, optionsDailySalesChart);\n\n      this.startAnimationForLineChart(dailySalesChart);\n      /* ----------==========     Completed Tasks Chart initialization    ==========---------- */\n\n      const dataCompletedTasksChart = {\n          labels: ['12p', '3p', '6p', '9p', '12p', '3a', '6a', '9a'],\n          series: [\n              [230, 750, 450, 300, 280, 240, 200, 190]\n          ]\n      };\n\n      const optionsCompletedTasksChart = {\n          lineSmooth: Chartist.Interpolation.cardinal({\n              tension: 0\n          }),\n          low: 0,\n          high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better\n          // look\n          chartPadding: { top: 0, right: 0, bottom: 0, left: 0}\n      };\n\n     const completedTasksChart = new Chartist.Line('#completedTasksChart', dataCompletedTasksChart,\n      optionsCompletedTasksChart);\n\n     this.startAnimationForLineChart(completedTasksChart);\n\n      /* ----------==========     Emails Subscription Chart initialization    ==========---------- */\n\n      const dataWebsiteViewsChart = {\n        labels: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n        series: [\n          [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]\n\n        ]\n      };\n      const optionsWebsiteViewsChart = {\n          axisX: {\n              showGrid: false\n          },\n          low: 0,\n          high: 1000,\n          chartPadding: { top: 0, right: 5, bottom: 0, left: 0}\n      };\n      const responsiveOptions: any = [\n        ['screen and (max-width: 640px)', {\n          seriesBarDistance: 5,\n          axisX: {\n            labelInterpolationFnc: function (value) {\n              return value[0];\n            }\n          }\n        }]\n      ];\n      const websiteViewsChart = new Chartist.Bar('#websiteViewsChart', dataWebsiteViewsChart, optionsWebsiteViewsChart, responsiveOptions);\n\n      this.startAnimationForBarChart(websiteViewsChart);\n\n      $('#worldMap').vectorMap({\n        map: 'world_en',\n        backgroundColor: 'transparent',\n         borderColor: '#818181',\n         borderOpacity: 0.25,\n         borderWidth: 1,\n         color: '#b3b3b3',\n         enableZoom: true,\n         hoverColor: '#eee',\n         hoverOpacity: null,\n         normalizeFunction: 'linear',\n         scaleColors: ['#b6d6ff', '#005ace'],\n         selectedColor: '#c9dfaf',\n         selectedRegions: null,\n         showTooltip: true,\n         onRegionClick: function(element, code, region)\n         {\n             var message = 'You clicked \"'\n                 + region\n                 + '\" which has the code: '\n                 + code.toUpperCase();\n\n             alert(message);\n         }\n      });\n      \n      // RESOLVER ESSA POG \n    let conceptNodeTemplate, relationNodeTemplate, normalLinkTemplate, orLinkTemplate, mapTemplate;\n    const $$ = go.GraphObject.make;\n\n    myDiagram = \n        $$(go.Diagram, this.element.nativeElement,{\n            initialContentAlignment: go.Spot.Center, // center the content\n        });\n\n        conceptNodeTemplate = \n            $$(go.Node, \"Auto\",  // the Shape will go around the TextBlock\n                new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\n                $$(go.Shape, \"Rectangle\", \n                {\n                    portId: \"\", \n                    strokeWidth: 1,\n                    fromLinkable: true, \n                    fromLinkableSelfNode: true, \n                    fromLinkableDuplicates: true,\n                    toLinkable: true, \n                    toLinkableSelfNode: true, \n                    toLinkableDuplicates: true,\n                    cursor: \"pointer\",\n                    fill: $$(go.Brush, \"Linear\", {0: \"rgb(254, 201, 0)\", 1:\"rgb(254, 162, 0)\"}),\n                    stroke: \"black\"\n                },\n                    // Shape.fill is bound to Node.data.color\n                    new go.Binding(\"fill\", \"color\")\n                ),\n                $$(go.TextBlock,\n                    {\n                        font: \"bold 12px sans-serif\",\n                        stroke: '#333',\n                        margin: 6,  // make some extra space for the shape around the text\n                        isMultiline: true,  // don't allow newlines in text\n                        editable: true  // allow in-place editing by user\n                    },  // some room around the text\n                    // TextBlock.text is bound to Node.data.key\n                    new go.Binding(\"text\", \"text\").makeTwoWay()\n                )\n        );\n\n        relationNodeTemplate = \n            $$(go.Node, \"Auto\",  // the Shape will go around the TextBlock\n                new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\n                $$(go.Shape, \"Rectangle\", \n                {\n                    portId: \"\", \n                    strokeWidth: 1,\n                    fromLinkable: true, \n                    fromLinkableSelfNode: true, \n                    fromLinkableDuplicates: true,\n                    toLinkable: true, \n                    toLinkableSelfNode: true, \n                    toLinkableDuplicates: true,\n                    cursor: \"pointer\",\n                    fill: \"rgba(255,255,255,0)\",\n                    stroke: \"rgba(255,255,255,0)\"\n                }),\n                $$(go.TextBlock,\n                    {\n                        font: \"bold 12px sans-serif\",\n                        stroke: '#333',\n                        margin: 6,  // make some extra space for the shape around the text\n                        isMultiline: true,  // don't allow newlines in text\n                        editable: true\n                    },  // some room around the text\n                    // TextBlock.text is bound to Node.data.key\n                    new go.Binding(\"text\", \"text\").makeTwoWay()\n                )\n        );\n\n        normalLinkTemplate = \n            $$(go.Link,\n                { \n                    toShortLength: 3, \n                    relinkableFrom: true, \n                    relinkableTo: true,\n                    curve: go.Link.Bezier,\n                    reshapable: true\n                },  // allow the user to relink existing links\n                new go.Binding(\"points\").makeTwoWay(),\n                $$(go.Shape,\n                    {\n                        strokeWidth: 1 \n                    },\n                    new go.Binding(\"stroke\", \"color\").makeTwoWay()\n                ),\n                $$(go.Shape,\n                    { \n                        toArrow: \"Standard\",\n                        stroke: null\n                    },\n                    new go.Binding(\"stroke\", \"color\").makeTwoWay(),\n                    new go.Binding(\"fill\", \"color\").makeTwoWay(),\n            )\n        );\n\n        orLinkTemplate = \n            $$(go.Link,\n                { \n                    toShortLength: 3, \n                    relinkableFrom: true, \n                    relinkableTo: true,\n                    curve: go.Link.Bezier,\n                    reshapable: true\n                },  // allow the user to relink existing links\n                new go.Binding(\"points\").makeTwoWay(),\n                $$(go.Shape,\n                    {\n                        strokeWidth: 1 \n                    },\n                    new go.Binding(\"stroke\", \"color\").makeTwoWay()\n                ),\n                $$(go.Shape,\n                    {\n                        toArrow: \"Standard\",\n                        stroke: null\n                    },\n                    new go.Binding(\"fill\", \"color\").makeTwoWay()\n                ),\n                $$(go.Shape,\n                    {\n                        strokeWidth: 1, \n                        fromArrow: \"BackwardSemiCircle\" \n                    },\n                    new go.Binding(\"fill\", \"color\").makeTwoWay()\n                )\n            );\n\n        mapTemplate =\n            $$(go.Group, \"Auto\",{},\n                new go.Binding(\"isSubGraphExpanded\", \"expanded\").makeTwoWay(),\n                new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\n                $$(go.Shape, \"RoundedRectangle\",\n                    {\n                        strokeWidth: 1,\n                        portId: \"\", \n                        cursor: \"pointer\",\n                        fromLinkable: true, \n                        fromLinkableSelfNode: true, \n                        fromLinkableDuplicates: true,\n                        toLinkable: true, \n                        toLinkableSelfNode: true, \n                        toLinkableDuplicates: true \n                    },\n                    new go.Binding(\"fill\", \"isHighlighted\", function(h) { return h ? \"rgba(255,0,0,0.2)\" : $$(go.Brush, \"Linear\", { 0: \"rgba(224,234,252,0.5)\", 1: \"rgba(207,222,243,0.5)\" }); }).ofObject(),\n                ),\n                $$(go.Panel, \"Vertical\",\n                    { \n                        defaultAlignment: go.Spot.Center, \n                        margin: 6 \n                    },\n                    $$(go.Panel, \"Horizontal\",\n                        { \n                            defaultAlignment: go.Spot.Top\n                        },\n                        $$(\"SubGraphExpanderButton\"), // the SubGraphExpanderButton is a panel that functions as a button to expand or collapse the subGraph\n                        $$(go.TextBlock,\n                            {\n                                font: \"bold 12px sans-serif\",\n                                stroke: '#333',\n                                margin: 4,  // make some extra space for the shape around the text\n                                isMultiline: true,  // don't allow newlines in text\n                                editable: true, \n                                alignment: go.Spot.Center\n                            },\n                            new go.Binding(\"text\", \"text\").makeTwoWay())\n                    ),\n                    $$(go.Placeholder, // create a placeholder to represent the area where the contents of the group are\n                        { \n                            padding: new go.Margin(0, 5) \n                        }\n                    )\n                )\n        );\n\n        myDiagram.nodeTemplateMap.add(\"concept\", conceptNodeTemplate);\n        myDiagram.nodeTemplateMap.add(\"relation\", relationNodeTemplate);\n        \n        myDiagram.linkTemplateMap.add(\"normal\", normalLinkTemplate);\n        myDiagram.linkTemplateMap.add(\"or\", orLinkTemplate);\n        \n        myDiagram.groupTemplateMap.add(\"map\", mapTemplate);\n   }\n   ngAfterViewInit() {\n       const breakCards = true;\n       if (breakCards === true) {\n           // We break the cards headers if there is too much stress on them :-)\n           $('[data-header-animation=\"true\"]').each(function(){\n               const $fix_button = $(this);\n               const $card = $(this).parent('.card');\n               $card.find('.fix-broken-card').click(function(){\n                   const $header = $(this).parent().parent().siblings('.card-header, .card-image');\n                   $header.removeClass('hinge').addClass('fadeInDown');\n\n                   $card.attr('data-count', 0);\n\n                   setTimeout(function(){\n                       $header.removeClass('fadeInDown animate');\n                   }, 480);\n               });\n\n               $card.mouseenter(function(){\n                   const $this = $(this);\n                   const hover_count = parseInt($this.attr('data-count'), 10) + 1 || 0;\n                   $this.attr('data-count', hover_count);\n                   if (hover_count >= 20) {\n                       $(this).children('.card-header, .card-image').addClass('hinge animated');\n                   }\n               });\n           });\n       }\n   }\n   click(n){\n        this.mapService.setCurrentMap(this.maps[n]);\n        this.router.navigate(['view','map']);\n   }\n}\n","module.exports = \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                  <div class=\\\"card-header card-header-danger card-header-icon\\\">\\n                    <div class=\\\"card-icon\\\">\\n                      <i class=\\\"material-icons\\\">map</i>\\n                    </div>\\n                    <h4 class=\\\"card-title\\\">Maps</h4>\\n                  </div>\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"toolbar\\\">\\n                                \\n                        </div>\\n                        <div class=\\\"material-datatables\\\">\\n                          <table id=\\\"datatables\\\" class=\\\"table table-striped table-no-bordered table-hover\\\" *ngIf=\\\"this.loaded\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\" style=\\\"width:100%\\\">\\n                                <thead>\\n                                    <tr>\\n                                      <th>{{ dataTable.headerRow[0] }}</th>\\n                                      <th>{{ dataTable.headerRow[1] }}</th>\\n                                      <th>{{ dataTable.headerRow[2] }}</th>\\n                                      <th class=\\\"disabled-sorting text-right\\\">{{ dataTable.headerRow[3] }}</th>\\n                                    </tr>\\n                                </thead>\\n                                <tfoot>\\n                                    <tr>\\n                                      <th>{{ dataTable.footerRow[0] }}</th>\\n                                      <th>{{ dataTable.footerRow[1] }}</th>\\n                                      <th>{{ dataTable.footerRow[2] }}</th>\\n                                      <th class=\\\"text-right\\\">{{ dataTable.footerRow[3] }}</th>\\n                                    </tr>\\n                                </tfoot>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let row of dataTable.dataRows\\\">\\n                                        <td>{{row.title}}</td>\\n                                        <td>{{row.question}}</td>\\n                                        <td>{{row.author.username}}</td>\\n                                        <td class=\\\"text-right\\\">\\n                                          <a href=\\\"#\\\" class=\\\"btn btn-link btn-info btn-just-icon like\\\"><i class=\\\"material-icons\\\">favorite</i></a>\\n                                          <a href=\\\"#\\\" class=\\\"btn btn-link btn-warning btn-just-icon edit\\\"><i class=\\\"material-icons\\\">dvr</i></a>\\n                                          <a href=\\\"#\\\" class=\\\"btn btn-link btn-danger btn-just-icon remove\\\"><i class=\\\"material-icons\\\">close</i></a>\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                    <!-- end content-->\\n                </div>\\n                <!--  end card  -->\\n            </div>\\n            <!-- end col-md-12 -->\\n        </div>\\n        <!-- end row -->\\n    </div>\\n</div>\\n\"","// IMPORTANT: this is a plugin which requires jQuery for initialisation and data manipulation\n\nimport { Component, OnInit, AfterViewInit, AfterViewChecked } from '@angular/core';\nimport { MapService } from '../../_services/index.service';\nimport { ConceptMap } from '../../_models/index.model';\n\ndeclare interface DataTable {\n  headerRow: string[];\n  footerRow: string[];\n  dataRows: ConceptMap[];\n}\n\ndeclare const $: any;\n\n@Component({\n    selector: 'app-admin-maps-cmp',\n    templateUrl: 'adminmaps.component.html'\n})\n\nexport class AdminMapsComponent implements OnInit, AfterViewInit, AfterViewChecked {\n    public dataTable: DataTable;\n    private mapList: ConceptMap[];\n    public loaded: boolean = false;\n    public rendered: boolean = false; \n\n    constructor(private mapService: MapService){}\n\n    populate(){\n      this.dataTable = {\n        headerRow: [ 'Title', 'Question', 'Author', 'Actions' ],\n        footerRow: [ 'Title', 'Question', 'Author', 'Actions' ],\n\n        dataRows: this.mapList\n     };\n     this.loaded = true;\n    }\n\n    ngOnInit() {\n      this.mapService.getAll()\n        .subscribe(data => {\n            this.mapList = data;\n            this.populate();\n        });\n    }\n\n    ngAfterViewInit() {\n    }\n\n    ngAfterViewChecked() {\n      if(this.loaded && !this.rendered){\n        $('#datatables').DataTable({\n          \"pagingType\": \"full_numbers\",\n          \"lengthMenu\": [\n            [10, 25, 50, -1],\n            [10, 25, 50, \"All\"]\n          ],\n          responsive: true,\n          language: {\n            search: \"_INPUT_\",\n            searchPlaceholder: \"Search records\",\n          }\n\n        });\n\n        const table = $('#datatables').DataTable();\n\n        // Edit record\n        table.on('click', '.edit', function(e) {\n          const $tr = $(this).closest('tr');\n          const data = table.row($tr).data();\n          alert('You press on Row: ' + data[0] + ' ' + data[1] + ' ' + data[2] + '\\'s row.');\n          e.preventDefault();\n        });\n\n        // Delete a record\n        table.on('click', '.remove', function(e) {\n          const $tr = $(this).closest('tr');\n          table.row($tr).remove().draw();\n          e.preventDefault();\n        });\n\n        //Like record\n        table.on('click', '.like', function(e) {\n          alert('You clicked on Like button');\n          e.preventDefault();\n        });\n\n        $('.card .material-datatables label').addClass('form-group');\n        this.rendered = true;\n      }\n    }\n}\n","module.exports = \"<div class=\\\"main-content\\\">\\n        <div class=\\\"container-fluid\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12\\\">\\n                    <div class=\\\"card\\\">\\n                        <form [formGroup]=\\\"type\\\" class=\\\"form-horizontal\\\">\\n                          <div class=\\\"card-header card-header-success card-header-icon\\\">\\n                              <div class=\\\"card-icon\\\" style=\\\"margin-top: -35px\\\">\\n                                  <i class=\\\"material-icons\\\">person_add</i>\\n                                </div>\\n                                <h4 class=\\\"card-title\\\">Add New User</h4>\\n                          </div>\\n                            <div class=\\\"card-body\\\">\\n                                <div class=\\\"row\\\">\\n                                  <label class=\\\"col-sm-2 col-form-label\\\">First Name: </label>\\n                                    <div class=\\\"col-sm-3\\\">\\n                                      <mat-form-field class=\\\"example-full-width has-label\\\" [ngClass]=\\\"{'has-success':validTextType===true}\\\" [ngClass]=\\\"displayFieldCss(type, 'text')\\\">\\n                                        <input type=\\\"text\\\"\\n                                        matInput\\n                                        id=\\\"firstname\\\"\\n                                        (ngModelChange)=\\\"textValidationType($event)\\\"\\n                                        formControlName=\\\"firstname\\\">\\n                                        <app-field-error-display [displayError]=\\\"isFieldValid(type, 'firstname')\\\" errorMsg=\\\"Required text\\\">\\n                                        </app-field-error-display>\\n                                      </mat-form-field>\\n                                    </div>\\n                                    <label class=\\\"col-sm-1 col-form-label\\\">Surname: </label>\\n                                      <div class=\\\"col-sm-5\\\">\\n                                        <mat-form-field class=\\\"example-full-width has-label\\\" [ngClass]=\\\"{'has-success':validTextType===true}\\\" [ngClass]=\\\"displayFieldCss(type, 'text')\\\">\\n                                          <input type=\\\"text\\\"\\n                                          matInput\\n                                          id=\\\"surname\\\"\\n                                          (ngModelChange)=\\\"textValidationType($event)\\\"\\n                                          formControlName=\\\"surname\\\">\\n                                          <app-field-error-display [displayError]=\\\"isFieldValid(type, 'surname')\\\" errorMsg=\\\"Required text\\\">\\n                                          </app-field-error-display>\\n                                        </mat-form-field>\\n                                      </div>\\n                                </div>\\n                                <div class=\\\"row\\\">\\n                                    <label class=\\\"col-sm-2 col-form-label\\\">Username: </label>\\n                                    <div class=\\\"col-sm-3\\\">\\n                                      <mat-form-field class=\\\"example-full-width has-label\\\" [ngClass]=\\\"{'has-success':validTextType===true}\\\" [ngClass]=\\\"displayFieldCss(type, 'text')\\\">\\n                                        <input type=\\\"text\\\"\\n                                        matInput\\n                                        id=\\\"username\\\"\\n                                        (ngModelChange)=\\\"textValidationType($event)\\\"\\n                                        formControlName=\\\"username\\\">\\n                                        <app-field-error-display [displayError]=\\\"isFieldValid(type, 'username')\\\" errorMsg=\\\"Required text\\\">\\n                                        </app-field-error-display>\\n                                      </mat-form-field>\\n                                    </div>\\n    \\n                                    <label class=\\\"col-sm-1 col-form-label\\\">Email:</label>\\n    \\n                                    <div class=\\\"col-sm-5\\\">\\n                                      <mat-form-field class=\\\"example-full-width has-label\\\" [ngClass]=\\\"{'has-success':validEmailType===true}\\\">\\n                                         <input\\n                                         type=\\\"email\\\"\\n                                         matInput\\n                                         [errorStateMatcher]=\\\"matcher\\\"\\n                                         (ngModelChange)=\\\"emailValidationType($event)\\\"\\n                                         formControlName=\\\"email\\\">\\n                                         <mat-error *ngIf=\\\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\\\">\\n                                           Please enter a valid email address\\n                                         </mat-error>\\n                                         <mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\n                                           Email is <strong>required</strong>\\n                                         </mat-error>\\n                                       </mat-form-field>\\n                                    </div>\\n                                    \\n                                </div>\\n                                <div class=\\\"row\\\">\\n    \\n                                    <label class=\\\"col-sm-2 col-form-label\\\">Password: </label>\\n                                    <div class=\\\"col-sm-3\\\">\\n                                      <mat-form-field class=\\\"example-full-width\\\" [ngClass]=\\\"{'has-success':validSourceType===true}\\\" [ngClass]=\\\"displayFieldCss(type, 'password')\\\">\\n                                        <input type=\\\"password\\\"\\n                                        matInput\\n                                          name=\\\"password\\\"\\n                                          (ngModelChange)=\\\"sourceValidationType($event)\\\"\\n                                        formControlName=\\\"password\\\">\\n                                        <app-field-error-display [displayError]=\\\"isFieldValid(type, 'password')\\\" errorMsg=\\\"IdSource is required\\\">\\n                                        </app-field-error-display>\\n                                      </mat-form-field>\\n                                    </div>\\n                                    <label class=\\\"col-sm-1 col-form-label\\\">Repeate: </label>\\n                                    <div class=\\\"col-sm-3\\\">\\n                                      <mat-form-field class=\\\"example-full-width\\\" [ngClass]=\\\"{'has-success':validDestinationType===true}\\\" [ngClass]=\\\"displayFieldCss(type, 'confirmPassword')\\\">\\n                                        <input type=\\\"password\\\"\\n                                        matInput\\n                                        name=\\\"repeated\\\"\\n                                        (ngModelChange)=\\\"confirmDestinationValidationType($event)\\\"\\n                                        formControlName=\\\"confirmPassword\\\">\\n                                        <app-field-error-display [displayError]=\\\"isFieldValid(type, 'confirmPassword')\\\" errorMsg=\\\" Password mismatch!\\\">\\n                                        </app-field-error-display>\\n                                      </mat-form-field>\\n                                    </div>\\n                                </div>\\n                                \\n                            </div>\\n                            <div class=\\\"card-footer\\\">\\n                              <div class=\\\"col-md-6\\\">\\n                                <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-success btn-fill\\\" (click)=\\\"onType()\\\">\\n                                    <span class=\\\"btn-label\\\">\\n                                        <i class=\\\"material-icons\\\">check</i>\\n                                    </span>\\n                                    Register\\n                                </button>\\n                                <button mat-raised-button class=\\\"btn btn-danger\\\" (click)=\\\"back()\\\">\\n                                    <span class=\\\"btn-label\\\">\\n                                      <i class=\\\"material-icons\\\">keyboard_arrow_left</i>\\n                                    </span>\\n                                    Back\\n                                  </button>\\n                                </div>\\n                            </div>\\n                        </form>\\n                    </div>\\n                </div>\\n        </div>\\n    </div>\\n    \"","import { Component } from '@angular/core';\n\nimport {FormControl, FormGroupDirective, NgForm, Validators, FormGroup, FormBuilder} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { PasswordValidation } from './password-validator.component';\nimport { UserService } from '../../../_services/user/user.service';\nimport { Router } from '@angular/router';\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\ndeclare const $: any;\n\n@Component({\n    selector: 'app-adduserform-cmp',\n    templateUrl: 'adduserform.component.html'\n})\nexport class AddUserFormComponent {\n\n  constructor(private userService: UserService, private formBuilder: FormBuilder, private router: Router){};\n\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n\n  validTextType: boolean = false;\n  validEmailType: boolean = false;\n  validNumberType: boolean = false;\n  validUrlType: boolean = false;\n  pattern = \"https?://.+\";\n  validSourceType: boolean = false;\n  validDestinationType: boolean = false;\n\n  matcher = new MyErrorStateMatcher();\n  type : FormGroup;\n\n\n   isFieldValid(form: FormGroup, field: string) {\n     return !form.get(field).valid && form.get(field).touched;\n   }\n\n   displayFieldCss(form: FormGroup, field: string) {\n     return {\n       'has-error': this.isFieldValid(form, field),\n       'has-feedback': this.isFieldValid(form, field)\n     };\n   }\n\n   back(){\n     this.router.navigate(['administration/users']);\n   }\n\n   onType() {\n     if (this.type.valid) {\n       this.userService.create(this.type.getRawValue())\n          .subscribe(data => {\n            $.notify({\n              icon: 'notifications',\n              message: data.userMessage\n            }, {\n                type: 'success',\n                timer: 3000,\n                placement: {\n                    from: 'top',\n                    align: 'right'\n                },\n                template: '<div data-notify=\"container\" class=\"col-xs-11 col-sm-4 alert alert-{0}\" role=\"alert\">' +\n                  '<button mat-raised-button type=\"button\" aria-hidden=\"true\" class=\"close\" data-notify=\"dismiss\">  <i class=\"material-icons\">close</i></button>' +\n                  '<span data-notify=\"title\">{1}</span> ' +\n                  '<span data-notify=\"message\">{2}</span>' +\n                  '<div class=\"progress\" data-notify=\"progressbar\">' +\n                    '<div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>' +\n                  '</div>' +\n                  '<a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a>' +\n                '</div>'\n            });\n            this.type.reset();\n            for(var key in this.type.controls) this.type.controls[key].setErrors(null);\n          }, error => alert(error));\n     } else {\n       this.validateAllFormFields(this.type);\n     }\n   }\n   validateAllFormFields(formGroup: FormGroup) {\n     Object.keys(formGroup.controls).forEach(field => {\n       const control = formGroup.get(field);\n       if (control instanceof FormControl) {\n         control.markAsTouched({ onlySelf: true });\n       } else if (control instanceof FormGroup) {\n         this.validateAllFormFields(control);\n       }\n     });\n   }\n  ngOnInit() {\n       this.type = this.formBuilder.group({\n         // To add a validator, we must first convert the string value into an array. The first item in the array is the default value if any, then the next item in the array is the validator. Here we are adding a required validator meaning that the firstname attribute must have a value in it.\n         firstname: [null, Validators.required],\n         surname: [null, Validators.required],\n         username: [null, Validators.required],\n         email: [null, [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]],\n         // We can use more than one validator per field. If we want to use more than one validator we have to wrap our array of validators with a Validators.compose function. Here we are using a required, minimum length and maximum length validator.\n         password: ['', Validators.required],\n         confirmPassword: ['', Validators.required],\n        }, {\n          validator: PasswordValidation.MatchPassword // your validation method\n      });\n  }\n  textValidationType(e){\n      if (e) {\n          this.validTextType = true;\n      }else{\n        this.validTextType = false;\n      }\n  }\n  emailValidationType(e){\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (re.test(String(e).toLowerCase())) {\n        this.validEmailType = true;\n    } else {\n      this.validEmailType = false;\n    }\n  }\n  \n  sourceValidationType(e){\n      if (e) {\n          this.validSourceType = true;\n      }else{\n        this.validSourceType = false;\n      }\n  }\n  confirmDestinationValidationType(e){\n    if (this.type.controls['password'].value === e) {\n        this.validDestinationType = true;\n    }else{\n      this.validDestinationType = false;\n    }\n  }\n\n}\n","module.exports = \".error-msg {\\n  color: red;\\n  display: inline-block;\\n  position: absolute;\\n  top: 34px;\\n  /* font-size: 10px; */\\n  font-size: 75%;\\n  margin-top: 2.604167em;\\n  top: calc(100% - 1.72916667em);\\n}\\n.fix-error-icon {\\n  top: 27px;\\n}\\n\"","module.exports = \"<div *ngIf=\\\"displayError\\\" >\\n  <!-- <span class=\\\"glyphicon glyphicon-remove form-control-feedback fix-error-icon\\\"></span> -->\\n  <span class=\\\"sr-only\\\">(error)</span>\\n  <div class=\\\"error-msg\\\">\\n    {{ errorMsg }}\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-field-error-display',\n  templateUrl: './field-error-display.component.html',\n  styleUrls: ['./field-error-display.component.css']\n})\nexport class FieldErrorDisplayComponent {\n\n  @Input() errorMsg: string;\n  @Input() displayError: boolean;\n\n}\n","import { AbstractControl } from '@angular/forms';\nexport class PasswordValidation {\n\n    static MatchPassword(AC: AbstractControl) {\n       const password = AC.get('password').value; // to get value in input tag\n       const confirmPassword = AC.get('confirmPassword').value; // to get value in input tag\n        if (password !== confirmPassword) {\n            AC.get('confirmPassword').setErrors( {MatchPassword: true} );\n        } else {\n            return null;\n        }\n    }\n}\n","module.exports = \"img{\\n    max-width: 50px;\\n    max-height: 50px;\\n    overflow: hidden;\\n    overflow-x: hidden;\\n    overflow-y: hidden;\\n    border-radius: 50%;\\n    border-top-left-radius: 50%;\\n    border-top-right-radius: 50%;\\n    border-bottom-right-radius: 50%;\\n    border-bottom-left-radius: 50%;\\n}\"","module.exports = \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                  <div class=\\\"card-header card-header-danger card-header-icon\\\">\\n                    <div class=\\\"card-icon\\\">\\n                      <i class=\\\"material-icons\\\">people</i>\\n                    </div>\\n                    <h4 class=\\\"card-title\\\">Users</h4>\\n                  </div>\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"toolbar\\\">\\n                                <a routerLink=\\\"./add\\\" mat-raised-button mat-min-fab class=\\\"btn btn-success btn-round btn-fab\\\">\\n                                    <i class=\\\"material-icons\\\">person_add</i>\\n                                </a>\\n                        </div>\\n                        <div class=\\\"material-datatables\\\">\\n                          <table id=\\\"datatables\\\" class=\\\"table table-striped table-no-bordered table-hover\\\" *ngIf=\\\"this.loaded\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\" style=\\\"width:100%\\\">\\n                                <thead>\\n                                    <tr>\\n                                      <th>{{ dataTable.headerRow[0] }}</th>\\n                                      <th>{{ dataTable.headerRow[1] }}</th>\\n                                      <th>{{ dataTable.headerRow[2] }}</th>\\n                                      <th>{{ dataTable.headerRow[3] }}</th>\\n                                      <th class=\\\"disabled-sorting text-right\\\">{{ dataTable.headerRow[4] }}</th>\\n                                    </tr>\\n                                </thead>\\n                                <tfoot>\\n                                    <tr>\\n                                      <th>{{ dataTable.footerRow[0] }}</th>\\n                                      <th>{{ dataTable.footerRow[1] }}</th>\\n                                      <th>{{ dataTable.footerRow[2] }}</th>\\n                                      <th>{{ dataTable.footerRow[3] }}</th>\\n                                      <th class=\\\"text-right\\\">{{ dataTable.footerRow[4] }}</th>\\n                                    </tr>\\n                                </tfoot>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let row of dataTable.dataRows\\\">\\n                                        <td><img src=\\\"{{row.profile_picture}}\\\"></td>\\n                                        <td>{{row.username}}</td>\\n                                        <td>{{row.firstname + ' ' + row.surname}}</td>\\n                                        <td>{{row.email}}</td>\\n                                        <td class=\\\"text-right\\\">\\n                                          <a href=\\\"#\\\" class=\\\"btn btn-link btn-info btn-just-icon like\\\"><i class=\\\"material-icons\\\">favorite</i></a>\\n                                          <a href=\\\"#\\\" class=\\\"btn btn-link btn-warning btn-just-icon edit\\\"><i class=\\\"material-icons\\\">dvr</i></a>\\n                                          <a href=\\\"#\\\" class=\\\"btn btn-link btn-danger btn-just-icon remove\\\"><i class=\\\"material-icons\\\">close</i></a>\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                    <!-- end content-->\\n                </div>\\n                <!--  end card  -->\\n            </div>\\n            <!-- end col-md-12 -->\\n        </div>\\n        <!-- end row -->\\n    </div>\\n</div>\\n\"","// IMPORTANT: this is a plugin which requires jQuery for initialisation and data manipulation\n\nimport { Component, OnInit, AfterViewInit, AfterViewChecked } from '@angular/core';\nimport { UserService } from '../../_services/user/user.service';\nimport { User } from '../../_models/index.model';\n\ndeclare interface DataTable {\n  headerRow: string[];\n  footerRow: string[];\n  dataRows: User[];\n}\n\ndeclare const $: any;\n\n@Component({\n    selector: 'app-admin-users-cmp',\n    templateUrl: 'adminusers.component.html',\n    styleUrls: ['./adminusers.component.css']\n})\n\nexport class AdminUsersComponent implements OnInit, AfterViewInit, AfterViewChecked {\n    public dataTable: DataTable;\n    private userList: User[];\n    public loaded: boolean = false;\n    public rendered: boolean = false; \n\n    constructor(private userService: UserService){}\n\n    populate(){\n      this.dataTable = {\n        headerRow: [ 'picture','Username', 'Full Name', 'e-Mail', 'Actions' ],\n        footerRow: [ 'picture','Username', 'Full Name', 'e-Mail', 'Actions' ],\n\n        dataRows: this.userList\n     };\n     this.loaded = true;\n    }\n\n    ngOnInit() {\n      this.userService.getAll()\n        .subscribe(data => {\n            this.userList = data;\n            this.populate();\n        });\n    }\n\n    ngAfterViewInit() {\n    }\n\n    ngAfterViewChecked() {\n      if(this.loaded && !this.rendered){\n        $('#datatables').DataTable({\n          \"pagingType\": \"full_numbers\",\n          \"lengthMenu\": [\n            [10, 25, 50, -1],\n            [10, 25, 50, \"All\"]\n          ],\n          responsive: true,\n          language: {\n            search: \"_INPUT_\",\n            searchPlaceholder: \"Search records\",\n          }\n\n        });\n\n        const table = $('#datatables').DataTable();\n\n        // Edit record\n        table.on('click', '.edit', function(e) {\n          const $tr = $(this).closest('tr');\n          const data = table.row($tr).data();\n          alert('You press on Row: ' + data[0] + ' ' + data[1] + ' ' + data[2] + '\\'s row.');\n          e.preventDefault();\n        });\n\n        // Delete a record\n        table.on('click', '.remove', function(e) {\n          const $tr = $(this).closest('tr');\n          table.row($tr).remove().draw();\n          e.preventDefault();\n        });\n\n        //Like record\n        table.on('click', '.like', function(e) {\n          alert('You clicked on Like button');\n          e.preventDefault();\n        });\n\n        $('.card .material-datatables label').addClass('form-group');\n        this.rendered = true;\n      }\n    }\n}\n"],"sourceRoot":""}