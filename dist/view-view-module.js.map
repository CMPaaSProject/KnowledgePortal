{"version":3,"sources":["webpack:///./src/app/view/map/versions/viewmapversions.component.css","webpack:///./src/app/view/map/versions/viewmapversions.component.html","webpack:///./src/app/view/map/versions/viewmapversions.component.ts","webpack:///./src/app/view/map/viewmap.component.css","webpack:///./src/app/view/map/viewmap.component.html","webpack:///./src/app/view/map/viewmap.component.ts","webpack:///./src/app/view/view.module.ts","webpack:///./src/app/view/view.routing.ts"],"names":[],"mappings":"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","file":"view-view-module.js","sourcesContent":["module.exports = \".btn{\\n    box-shadow: 0 4px 20px 0px rgba(0, 0, 0, 0.14), 0 7px 10px -5px rgba(244, 67, 54, 0.4);\\n}\\n.mapimg{\\n    overflow: hidden;\\n}\\n.mapimg2{\\n    background-size: cover;\\n    width: 100%;\\n    border-radius: 6px;\\n    pointer-events: none;\\n    vertical-align: middle;\\n    border-style: none;\\n    height: 400px;\\n    overflow: hidden;\\n    -webkit-filter: brightness(97%);\\n            filter: brightness(97%)\\n}\\n#map{\\n    display: none;\\n}\"","module.exports = \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"header text-center\\\">\\n            <h3 class=\\\"title\\\">Versions Visualization</h3>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                        <div class=\\\"card-header card-header-tabs card-header-danger\\\">\\n                          <div class=\\\"nav-tabs-navigation\\\">\\n                            <div class=\\\"nav-tabs-wrapper\\\">\\n                                <span class=\\\"nav-tabs-title\\\">Versions:</span>\\n                              <ul class=\\\"nav nav-tabs\\\" data-tabs=\\\"tabs\\\">\\n                                <li class=\\\"nav-item\\\">\\n                                  <a class=\\\"nav-link active\\\" href=\\\"#list\\\" data-toggle=\\\"tab\\\">\\n                                    <i class=\\\"material-icons\\\">view_list</i> List\\n                                    <div class=\\\"ripple-container\\\"></div>\\n                                  </a>\\n                                </li>\\n                                <li class=\\\"nav-item\\\">\\n                                  <a class=\\\"nav-link\\\" href=\\\"#navigate\\\" data-toggle=\\\"tab\\\">\\n                                    <i class=\\\"material-icons\\\">code</i> Navigate\\n                                    <div class=\\\"ripple-container\\\"></div>\\n                                  </a>\\n                                </li>\\n                                <li class=\\\"nav-item\\\">\\n                                  <a class=\\\"nav-link\\\" href=\\\"#settings\\\" data-toggle=\\\"tab\\\">\\n                                    <i class=\\\"material-icons\\\">cloud</i> Server\\n                                    <div class=\\\"ripple-container\\\"></div>\\n                                  </a>\\n                                </li>\\n                              </ul>\\n                            </div>\\n                          </div>\\n                        </div>\\n                          <div class=\\\"card-body\\\">\\n                              <div class=\\\"tab-content\\\">\\n                                  <div class=\\\"tab-pane active\\\" id=\\\"list\\\">\\n                                      <table class=\\\"table\\\">\\n                                            <thead>\\n                                                    <tr>\\n                                                      <th class=\\\"text-center\\\">Check</th>\\n                                                      <th>Small Pic</th>\\n                                                      <th>Last Update</th>\\n                                                      <th>Options</th>\\n                                                    </tr>\\n                                                </thead>\\n                                            <tbody>\\n                                                <tr *ngFor=\\\"let row of versionList; let i = index\\\" [attr.data-index]=\\\"i\\\">\\n                                                        <td>\\n                                                            <div [ngSwitch]=\\\"row.checked\\\">\\n                                                                <div *ngSwitchCase=\\\"true\\\">\\n                                                                    <div class=\\\"form-check\\\">\\n                                                                    <label class=\\\"form-check-label\\\">\\n                                                                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\" checked>\\n                                                                        <span class=\\\"form-check-sign\\\">\\n                                                                        <span class=\\\"check\\\"></span>\\n                                                                        </span>\\n                                                                    </label>\\n                                                                    </div>\\n                                                                </div>\\n                                                                <div *ngSwitchDefault>\\n                                                                    <div class=\\\"form-check\\\">\\n                                                                    <label class=\\\"form-check-label\\\">\\n                                                                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\n                                                                        <span class=\\\"form-check-sign\\\">\\n                                                                        <span class=\\\"check\\\"></span>\\n                                                                        </span>\\n                                                                    </label>\\n                                                                    </div>\\n                                                                </div>\\n            \\n                                                            </div>\\n                                                        </td>\\n                                                    <td><div class=\\\"mapimg\\\" [innerHTML]=\\\"images[i]\\\"> </div></td>\\n                                                    <td>{{row.last_update | date:'medium'}}</td>\\n                                                    <td class=\\\"td-actions text-right\\\">\\n                                                        <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Edit Task\\\" [matTooltipPosition]=\\\"'left'\\\" class=\\\"btn btn-primary btn-link btn-sm\\\" (click)=\\\"edit(i)\\\">\\n                                                            <i class=\\\"material-icons\\\">edit</i>\\n                                                        </button>\\n      \\n                                                        <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Remove\\\" [matTooltipPosition]=\\\"'left'\\\" class=\\\"btn btn-danger btn-link btn-sm\\\">\\n                                                            <i class=\\\"material-icons\\\">close</i>\\n                                                        </button>\\n                                                    </td>\\n                                                 </tr>\\n                                            </tbody>\\n                                      </table>\\n                                  </div>\\n                                  <div class=\\\"tab-pane\\\" id=\\\"navigate\\\">\\n                                     <div class=\\\"row\\\">\\n                                         <div class=\\\"col-md-12 text-center\\\">\\n                                             <div class=\\\"mapimg2\\\" [innerHTML]=\\\"images2[count]\\\"> </div>\\n                                         </div>\\n                                     </div>\\n                                     <div class=\\\"row\\\">\\n                                        <div class=\\\"col-md-12 text-center\\\">\\n                                            <button mat-raised-button class=\\\"btn\\\">\\n                                                <span class=\\\"btn-label\\\">\\n                                                    <i class=\\\"material-icons\\\">keyboard_arrow_left</i>\\n                                                </span>\\n                                            </button>\\n                                            <button mat-raised-button class=\\\"btn btn-success\\\">\\n                                                <span class=\\\"btn-label\\\">\\n                                                    <i class=\\\"material-icons\\\">edit</i>\\n                                                </span>\\n                                            </button>\\n                                            <button mat-raised-button class=\\\"btn btn-danger\\\">\\n                                                <span class=\\\"btn-label\\\">\\n                                                    <i class=\\\"material-icons\\\">delete</i>\\n                                                </span>\\n                                            </button>\\n                                            <button mat-raised-button class=\\\"btn btn\\\" (click)=\\\"next()\\\">\\n                                                <span class=\\\"btn-label\\\">\\n                                                    <i class=\\\"material-icons\\\">keyboard_arrow_right</i>\\n                                                </span>\\n                                            </button>\\n                                        </div>\\n                                     </div>\\n                                  </div>\\n                                  <div class=\\\"tab-pane\\\" id=\\\"settings\\\">\\n                                      <table class=\\\"table\\\">\\n                                            <tbody>\\n                                                <tr *ngFor=\\\"let row of tasks3\\\">\\n                                                    <td>\\n                                                        <div [ngSwitch]=\\\"row.checked\\\">\\n                                                            <div *ngSwitchCase=\\\"true\\\">\\n                                                              <div class=\\\"form-check\\\">\\n                                                                <label class=\\\"form-check-label\\\">\\n                                                                  <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\" checked>\\n                                                                  <span class=\\\"form-check-sign\\\">\\n                                                                    <span class=\\\"check\\\"></span>\\n                                                                  </span>\\n                                                                </label>\\n                                                              </div>\\n                                                            </div>\\n                                                            <div *ngSwitchDefault>\\n                                                              <div class=\\\"form-check\\\">\\n                                                                <label class=\\\"form-check-label\\\">\\n                                                                  <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\n                                                                  <span class=\\\"form-check-sign\\\">\\n                                                                    <span class=\\\"check\\\"></span>\\n                                                                  </span>\\n                                                                </label>\\n                                                              </div>\\n                                                            </div>\\n      \\n                                                        </div>\\n                                                    </td>\\n                                                    <td>{{row.title}}</td>\\n                                                    <td class=\\\"td-actions text-right\\\">\\n                                                        <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Edit Task\\\" [matTooltipPosition]=\\\"'above'\\\"class=\\\"btn btn-primary btn-link btn-sm\\\">\\n                                                            <i class=\\\"material-icons\\\">edit</i>\\n                                                        </button>\\n                                                        <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Remove\\\" [matTooltipPosition]=\\\"'above'\\\" class=\\\"btn btn-primary btn-link btn-sm\\\">\\n                                                            <i class=\\\"material-icons\\\">close</i>\\n                                                        </button>\\n                                                    </td>\\n                                                 </tr>\\n                                            </tbody>\\n                                      </table>\\n                                  </div>\\n                              </div>\\n                          </div>\\n                      </div>\\n            </div>\\n            \\n        </div>\\n    </div>\\n</div>\\n\\n<div id=\\\"map\\\" #myDiagramDiv></div>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { MapService, MeService, VersionService } from '../../../_services/index.service';\nimport { ConceptMap, Version } from '../../../_models/index.model';\nimport * as go from 'gojs';\nimport { SafeHtml, DomSanitizer } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\n\n\nvar myDiagram: go.Diagram;\n\n\n@Component({\n    selector: 'app-view-map-versions-cmp',\n    templateUrl: './viewmapversions.component.html',\n    styleUrls: ['./viewmapversions.component.css']\n})\n\nexport class ViewMapVersionsComponent implements OnInit {\n    @ViewChild('myDiagramDiv')\n    element: ElementRef;\n\n    private count:number = 0;\n    private currentMap: ConceptMap;\n    public versionList: Version[];\n    private images:SafeHtml[] = new Array<SafeHtml>();\n    private images2:SafeHtml[] = new Array<SafeHtml>();\n    constructor(\n        private mapService:MapService, \n        private meService: MeService, \n        private _sanitizer: DomSanitizer, \n        private versionService:VersionService,\n        private router:Router\n    ){}\n\n    ngOnInit() {\n        let map:ConceptMap[] = new Array<ConceptMap>();\n        map.push(JSON.parse(this.mapService.getCurrentMap()));\n        this.meService.updateDashboardMapsVersions(map)\n            .subscribe(versions => {\n                this.versionList = versions;\n                let serializer = new XMLSerializer();\n                let svg;\n                for(let i = 0; i < this.versionList.length; i++){\n                    myDiagram.model = go.Model.fromJson(this.versionList[i].content);\n                    svg = myDiagram.makeSvg({\n                        scale:0.5,\n                        maxSize: new go.Size(NaN, 220)\n                    });\n                    this.images[i] = this._sanitizer.bypassSecurityTrustHtml(serializer.serializeToString(svg));\n\n                    svg = myDiagram.makeSvg({\n                        scale:0.8,\n                        maxSize: new go.Size(NaN, 400)\n                    });\n                    this.images2[i] = this._sanitizer.bypassSecurityTrustHtml(serializer.serializeToString(svg));\n                }\n            }, error => console.log(error));\n        \n\n\n        //POG AQUI TBM\n        let conceptNodeTemplate, relationNodeTemplate, normalLinkTemplate, orLinkTemplate, mapTemplate;\n        const $$ = go.GraphObject.make;\n\n        myDiagram = \n            $$(go.Diagram, this.element.nativeElement,{\n                initialContentAlignment: go.Spot.Center, // center the content\n            });\n\n            conceptNodeTemplate = \n                $$(go.Node, \"Auto\",  // the Shape will go around the TextBlock\n                    new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\n                    $$(go.Shape, \"Rectangle\", \n                    {\n                        portId: \"\", \n                        strokeWidth: 1,\n                        fromLinkable: true, \n                        fromLinkableSelfNode: true, \n                        fromLinkableDuplicates: true,\n                        toLinkable: true, \n                        toLinkableSelfNode: true, \n                        toLinkableDuplicates: true,\n                        cursor: \"pointer\",\n                        fill: $$(go.Brush, \"Linear\", {0: \"rgb(254, 201, 0)\", 1:\"rgb(254, 162, 0)\"}),\n                        stroke: \"black\"\n                    },\n                        // Shape.fill is bound to Node.data.color\n                        new go.Binding(\"fill\", \"color\")\n                    ),\n                    $$(go.TextBlock,\n                        {\n                            font: \"bold 12px sans-serif\",\n                            stroke: '#333',\n                            margin: 6,  // make some extra space for the shape around the text\n                            isMultiline: true,  // don't allow newlines in text\n                            editable: true  // allow in-place editing by user\n                        },  // some room around the text\n                        // TextBlock.text is bound to Node.data.key\n                        new go.Binding(\"text\", \"text\").makeTwoWay()\n                    )\n            );\n\n            relationNodeTemplate = \n                $$(go.Node, \"Auto\",  // the Shape will go around the TextBlock\n                    new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\n                    $$(go.Shape, \"Rectangle\", \n                    {\n                        portId: \"\", \n                        strokeWidth: 1,\n                        fromLinkable: true, \n                        fromLinkableSelfNode: true, \n                        fromLinkableDuplicates: true,\n                        toLinkable: true, \n                        toLinkableSelfNode: true, \n                        toLinkableDuplicates: true,\n                        cursor: \"pointer\",\n                        fill: \"rgba(255,255,255,0)\",\n                        stroke: \"rgba(255,255,255,0)\"\n                    }),\n                    $$(go.TextBlock,\n                        {\n                            font: \"bold 12px sans-serif\",\n                            stroke: '#333',\n                            margin: 6,  // make some extra space for the shape around the text\n                            isMultiline: true,  // don't allow newlines in text\n                            editable: true\n                        },  // some room around the text\n                        // TextBlock.text is bound to Node.data.key\n                        new go.Binding(\"text\", \"text\").makeTwoWay()\n                    )\n            );\n\n            normalLinkTemplate = \n                $$(go.Link,\n                    { \n                        toShortLength: 3, \n                        relinkableFrom: true, \n                        relinkableTo: true,\n                        curve: go.Link.Bezier,\n                        reshapable: true\n                    },  // allow the user to relink existing links\n                    new go.Binding(\"points\").makeTwoWay(),\n                    $$(go.Shape,\n                        {\n                            strokeWidth: 1 \n                        },\n                        new go.Binding(\"stroke\", \"color\").makeTwoWay()\n                    ),\n                    $$(go.Shape,\n                        { \n                            toArrow: \"Standard\",\n                            stroke: null\n                        },\n                        new go.Binding(\"stroke\", \"color\").makeTwoWay(),\n                        new go.Binding(\"fill\", \"color\").makeTwoWay(),\n                )\n            );\n\n            orLinkTemplate = \n                $$(go.Link,\n                    { \n                        toShortLength: 3, \n                        relinkableFrom: true, \n                        relinkableTo: true,\n                        curve: go.Link.Bezier,\n                        reshapable: true\n                    },  // allow the user to relink existing links\n                    new go.Binding(\"points\").makeTwoWay(),\n                    $$(go.Shape,\n                        {\n                            strokeWidth: 1 \n                        },\n                        new go.Binding(\"stroke\", \"color\").makeTwoWay()\n                    ),\n                    $$(go.Shape,\n                        {\n                            toArrow: \"Standard\",\n                            stroke: null\n                        },\n                        new go.Binding(\"fill\", \"color\").makeTwoWay()\n                    ),\n                    $$(go.Shape,\n                        {\n                            strokeWidth: 1, \n                            fromArrow: \"BackwardSemiCircle\" \n                        },\n                        new go.Binding(\"fill\", \"color\").makeTwoWay()\n                    )\n                );\n\n            mapTemplate =\n                $$(go.Group, \"Auto\",{},\n                    new go.Binding(\"isSubGraphExpanded\", \"expanded\").makeTwoWay(),\n                    new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\n                    $$(go.Shape, \"RoundedRectangle\",\n                        {\n                            strokeWidth: 1,\n                            portId: \"\", \n                            cursor: \"pointer\",\n                            fromLinkable: true, \n                            fromLinkableSelfNode: true, \n                            fromLinkableDuplicates: true,\n                            toLinkable: true, \n                            toLinkableSelfNode: true, \n                            toLinkableDuplicates: true \n                        },\n                        new go.Binding(\"fill\", \"isHighlighted\", function(h) { return h ? \"rgba(255,0,0,0.2)\" : $$(go.Brush, \"Linear\", { 0: \"rgba(224,234,252,0.5)\", 1: \"rgba(207,222,243,0.5)\" }); }).ofObject(),\n                    ),\n                    $$(go.Panel, \"Vertical\",\n                        { \n                            defaultAlignment: go.Spot.Center, \n                            margin: 6 \n                        },\n                        $$(go.Panel, \"Horizontal\",\n                            { \n                                defaultAlignment: go.Spot.Top\n                            },\n                            $$(\"SubGraphExpanderButton\"), // the SubGraphExpanderButton is a panel that functions as a button to expand or collapse the subGraph\n                            $$(go.TextBlock,\n                                {\n                                    font: \"bold 12px sans-serif\",\n                                    stroke: '#333',\n                                    margin: 4,  // make some extra space for the shape around the text\n                                    isMultiline: true,  // don't allow newlines in text\n                                    editable: true, \n                                    alignment: go.Spot.Center\n                                },\n                                new go.Binding(\"text\", \"text\").makeTwoWay())\n                        ),\n                        $$(go.Placeholder, // create a placeholder to represent the area where the contents of the group are\n                            { \n                                padding: new go.Margin(0, 5) \n                            }\n                        )\n                    )\n            );\n\n            myDiagram.nodeTemplateMap.add(\"concept\", conceptNodeTemplate);\n            myDiagram.nodeTemplateMap.add(\"relation\", relationNodeTemplate);\n            \n            myDiagram.linkTemplateMap.add(\"normal\", normalLinkTemplate);\n            myDiagram.linkTemplateMap.add(\"or\", orLinkTemplate);\n            \n            myDiagram.groupTemplateMap.add(\"map\", mapTemplate);\n    }\n\n    edit(n) {\n        this.versionService.setCurrentLoadVersion(this.versionList[n]);\n        this.router.navigate(['edit', 'cmap']);\n    }\n    next() {\n        this.count++;\n        this.count >= this.images2.length ? this.count = 0 : {} ;\n        console.log(this.count);\n    }\n}\n","module.exports = \"#map{\\n    display: none;\\n}\"","module.exports = \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"header text-center\\\">\\n            <h3 class=\\\"title\\\">Concept Map Visualization</h3>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-8\\\">\\n                        <div class=\\\"card\\\">\\n                            <div class=\\\"card-header card-header-icon card-header-primary\\\">\\n                                <div class=\\\"card-icon\\\">\\n                                    <i class=\\\"material-icons\\\">assignment</i>\\n                                </div>\\n                                <h4 class=\\\"card-title\\\">\\n                                    Meta-Informations\\n                                </h4>\\n                            </div>\\n                            <div class=\\\"card-body\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-md-12\\\">\\n                                    <form method=\\\"#\\\" action=\\\"#\\\">\\n                                        <mat-form-field class=\\\"example-full-width\\\">\\n                                            <input matInput placeholder=\\\"Map Title\\\" [(ngModel)]='currentMap.title' name=\\\"title\\\" type=\\\"text\\\">\\n                                        </mat-form-field>\\n                                        <mat-form-field class=\\\"example-full-width\\\">\\n                                                <input matInput placeholder=\\\"Question of investigation\\\" [(ngModel)]='currentMap.question' name=\\\"question\\\" type=\\\"text\\\">\\n                                            </mat-form-field>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label>Description</label>\\n                                            <div class=\\\"form-group\\\">\\n                                                <label class=\\\"bmd-label-floating\\\"> Talk about the content of this map.</label>\\n                                                <textarea class=\\\"form-control\\\" rows=\\\"3\\\" [(ngModel)]='currentMap.description' name=\\\"description\\\"></textarea>\\n                                            </div>\\n                                        </div>\\n                                        <label>Keywords</label>\\n                                        <tag-input [(ngModel)]='currentMap.keywords' secondaryPlaceholder=\\\"Enter keyword\\\" placeholder=\\\"+ Keyword\\\" theme='filled-theme' [ngModelOptions]=\\\"{standalone: true}\\\"></tag-input>\\n                                        <div class=\\\"togglebutton\\\">\\n                                            <label>\\n                                                Visibility level: \\n                                                <input type=\\\"checkbox\\\" [checked]=\\\"currentMap.isPublic\\\" (change)=\\\"currentMap.isPublic = !currentMap.isPublic\\\">\\n                                                <span class=\\\"toggle\\\"></span>\\n                                                {{currentMap.isPublic?'Is public':'Is private'}}\\n                                            </label>\\n                                        </div>\\n                                        \\n                                    </form>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-md-12 text-center\\\">\\n                                        <button mat-raised-button class=\\\"btn btn-success\\\" (click)=\\\"save()\\\">\\n                                                <span class=\\\"btn-label\\\">\\n                                                    <i class=\\\"material-icons\\\">update</i>\\n                                                </span>\\n                                                Update\\n                                        </button>\\n                                        <button mat-raised-button class=\\\"btn btn-danger\\\" (click)=\\\"back()\\\">\\n                                            <span class=\\\"btn-label\\\">\\n                                                <i class=\\\"material-icons\\\">delete</i>\\n                                            </span>\\n                                            Delete\\n                                        </button>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"card\\\">\\n                            <div class=\\\"card-header card-header-icon card-header-success\\\">\\n                                <div class=\\\"card-icon\\\">\\n                                    <i class=\\\"material-icons\\\">image</i>\\n                                </div>\\n                                <h4 class=\\\"card-title\\\">\\n                                    Versions Images\\n                                </h4>\\n                            </div>\\n                            <div class=\\\"card-body\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-md-10 text-center\\\">\\n                                        <div class=\\\"img\\\" [innerHTML]=\\\"images[count]\\\"> </div>\\n                                    </div>\\n                                    <div class=\\\"col-md-2 text-center\\\">\\n                                        <a routerLink=\\\"./versions\\\" mat-raised-button mat-min-fab class=\\\"btn btn-warning btn-round btn-fab btn-sm\\\" title=\\\"View history\\\">\\n                                            <i class=\\\"material-icons\\\">history</i>\\n                                        </a>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-md-12 text-center\\\">\\n                                        <button mat-raised-button mat-min-fab class=\\\"btn btn-success btn-round btn-fab btn-sm\\\" (click)=\\\"previus()\\\">\\n                                            <i class=\\\"material-icons\\\">chevron_left</i>\\n                                        </button>\\n                                        <button mat-raised-button mat-min-fab class=\\\"btn btn-success btn-round btn-fab btn-sm\\\" (click)=\\\"next()\\\">\\n                                            <i class=\\\"material-icons\\\">chevron_right</i>\\n                                        </button>\\n                                    </div>\\n                                    \\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"card\\\">\\n                            <div class=\\\"card-header card-header-icon card-header-info\\\">\\n                                <div class=\\\"card-icon\\\">\\n                                    <i class=\\\"material-icons\\\">share</i>\\n                                </div>\\n                                <h4 class=\\\"card-title\\\">\\n                                    Share with...\\n                                </h4>\\n                            </div>\\n                            <div class=\\\"card-body\\\">\\n                                \\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n        </div>\\n    </div>\\n</div>    \\n\\n<div id=\\\"map\\\" #myDiagramDiv></div>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { MapService, MeService, VersionService } from '../../_services/index.service';\nimport { ConceptMap, Version } from '../../_models/index.model';\nimport * as go from 'gojs';\nimport { SafeHtml, DomSanitizer } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\n\n\nvar myDiagram: go.Diagram;\n\n\n@Component({\n    selector: 'app-view-map-cmp',\n    templateUrl: 'viewmap.component.html',\n    styleUrls: ['./viewmap.component.css']\n})\n\nexport class ViewMapComponent implements OnInit {\n    @ViewChild('myDiagramDiv')\n    element: ElementRef;\n\n    private count:number = 0;\n    private currentMap: ConceptMap;\n    public versionList: Version[];\n    private images:SafeHtml[] = new Array<SafeHtml>();\n    private images2:SafeHtml[] = new Array<SafeHtml>();\n    constructor(\n        private mapService:MapService, \n        private meService: MeService, \n        private _sanitizer: DomSanitizer, \n        private versionService:VersionService,\n        private router:Router\n    ){}\n\n    ngOnInit() {\n        let map:ConceptMap[] = new Array<ConceptMap>();\n        map.push(this.currentMap = JSON.parse(this.mapService.getCurrentMap()));\n        console.log(this.currentMap);\n        this.meService.updateDashboardMapsVersions(map)\n            .subscribe(versions => {\n                this.versionList = versions;\n                let serializer = new XMLSerializer();\n                let svg;\n                for(let i = 0; i < this.versionList.length; i++){\n                    myDiagram.model = go.Model.fromJson(this.versionList[i].content);\n                    svg = myDiagram.makeSvg({\n                        scale:0.5,\n                        maxSize: new go.Size(NaN, 220)\n                    });\n                    this.images[i] = this._sanitizer.bypassSecurityTrustHtml(serializer.serializeToString(svg));\n\n                    svg = myDiagram.makeSvg({\n                        scale:0.8,\n                        maxSize: new go.Size(NaN, 400)\n                    });\n                    this.images2[i] = this._sanitizer.bypassSecurityTrustHtml(serializer.serializeToString(svg));\n                }\n            }, error => console.log(error));\n        \n\n\n        //POG AQUI TBM\n        let conceptNodeTemplate, relationNodeTemplate, normalLinkTemplate, orLinkTemplate, mapTemplate;\n        const $$ = go.GraphObject.make;\n\n        myDiagram = \n            $$(go.Diagram, this.element.nativeElement,{\n                initialContentAlignment: go.Spot.Center, // center the content\n            });\n\n            conceptNodeTemplate = \n                $$(go.Node, \"Auto\",  // the Shape will go around the TextBlock\n                    new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\n                    $$(go.Shape, \"Rectangle\", \n                    {\n                        portId: \"\", \n                        strokeWidth: 1,\n                        fromLinkable: true, \n                        fromLinkableSelfNode: true, \n                        fromLinkableDuplicates: true,\n                        toLinkable: true, \n                        toLinkableSelfNode: true, \n                        toLinkableDuplicates: true,\n                        cursor: \"pointer\",\n                        fill: $$(go.Brush, \"Linear\", {0: \"rgb(254, 201, 0)\", 1:\"rgb(254, 162, 0)\"}),\n                        stroke: \"black\"\n                    },\n                        // Shape.fill is bound to Node.data.color\n                        new go.Binding(\"fill\", \"color\")\n                    ),\n                    $$(go.TextBlock,\n                        {\n                            font: \"bold 12px sans-serif\",\n                            stroke: '#333',\n                            margin: 6,  // make some extra space for the shape around the text\n                            isMultiline: true,  // don't allow newlines in text\n                            editable: true  // allow in-place editing by user\n                        },  // some room around the text\n                        // TextBlock.text is bound to Node.data.key\n                        new go.Binding(\"text\", \"text\").makeTwoWay()\n                    )\n            );\n\n            relationNodeTemplate = \n                $$(go.Node, \"Auto\",  // the Shape will go around the TextBlock\n                    new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\n                    $$(go.Shape, \"Rectangle\", \n                    {\n                        portId: \"\", \n                        strokeWidth: 1,\n                        fromLinkable: true, \n                        fromLinkableSelfNode: true, \n                        fromLinkableDuplicates: true,\n                        toLinkable: true, \n                        toLinkableSelfNode: true, \n                        toLinkableDuplicates: true,\n                        cursor: \"pointer\",\n                        fill: \"rgba(255,255,255,0)\",\n                        stroke: \"rgba(255,255,255,0)\"\n                    }),\n                    $$(go.TextBlock,\n                        {\n                            font: \"bold 12px sans-serif\",\n                            stroke: '#333',\n                            margin: 6,  // make some extra space for the shape around the text\n                            isMultiline: true,  // don't allow newlines in text\n                            editable: true\n                        },  // some room around the text\n                        // TextBlock.text is bound to Node.data.key\n                        new go.Binding(\"text\", \"text\").makeTwoWay()\n                    )\n            );\n\n            normalLinkTemplate = \n                $$(go.Link,\n                    { \n                        toShortLength: 3, \n                        relinkableFrom: true, \n                        relinkableTo: true,\n                        curve: go.Link.Bezier,\n                        reshapable: true\n                    },  // allow the user to relink existing links\n                    new go.Binding(\"points\").makeTwoWay(),\n                    $$(go.Shape,\n                        {\n                            strokeWidth: 1 \n                        },\n                        new go.Binding(\"stroke\", \"color\").makeTwoWay()\n                    ),\n                    $$(go.Shape,\n                        { \n                            toArrow: \"Standard\",\n                            stroke: null\n                        },\n                        new go.Binding(\"stroke\", \"color\").makeTwoWay(),\n                        new go.Binding(\"fill\", \"color\").makeTwoWay(),\n                )\n            );\n\n            orLinkTemplate = \n                $$(go.Link,\n                    { \n                        toShortLength: 3, \n                        relinkableFrom: true, \n                        relinkableTo: true,\n                        curve: go.Link.Bezier,\n                        reshapable: true\n                    },  // allow the user to relink existing links\n                    new go.Binding(\"points\").makeTwoWay(),\n                    $$(go.Shape,\n                        {\n                            strokeWidth: 1 \n                        },\n                        new go.Binding(\"stroke\", \"color\").makeTwoWay()\n                    ),\n                    $$(go.Shape,\n                        {\n                            toArrow: \"Standard\",\n                            stroke: null\n                        },\n                        new go.Binding(\"fill\", \"color\").makeTwoWay()\n                    ),\n                    $$(go.Shape,\n                        {\n                            strokeWidth: 1, \n                            fromArrow: \"BackwardSemiCircle\" \n                        },\n                        new go.Binding(\"fill\", \"color\").makeTwoWay()\n                    )\n                );\n\n            mapTemplate =\n                $$(go.Group, \"Auto\",{},\n                    new go.Binding(\"isSubGraphExpanded\", \"expanded\").makeTwoWay(),\n                    new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\n                    $$(go.Shape, \"RoundedRectangle\",\n                        {\n                            strokeWidth: 1,\n                            portId: \"\", \n                            cursor: \"pointer\",\n                            fromLinkable: true, \n                            fromLinkableSelfNode: true, \n                            fromLinkableDuplicates: true,\n                            toLinkable: true, \n                            toLinkableSelfNode: true, \n                            toLinkableDuplicates: true \n                        },\n                        new go.Binding(\"fill\", \"isHighlighted\", function(h) { return h ? \"rgba(255,0,0,0.2)\" : $$(go.Brush, \"Linear\", { 0: \"rgba(224,234,252,0.5)\", 1: \"rgba(207,222,243,0.5)\" }); }).ofObject(),\n                    ),\n                    $$(go.Panel, \"Vertical\",\n                        { \n                            defaultAlignment: go.Spot.Center, \n                            margin: 6 \n                        },\n                        $$(go.Panel, \"Horizontal\",\n                            { \n                                defaultAlignment: go.Spot.Top\n                            },\n                            $$(\"SubGraphExpanderButton\"), // the SubGraphExpanderButton is a panel that functions as a button to expand or collapse the subGraph\n                            $$(go.TextBlock,\n                                {\n                                    font: \"bold 12px sans-serif\",\n                                    stroke: '#333',\n                                    margin: 4,  // make some extra space for the shape around the text\n                                    isMultiline: true,  // don't allow newlines in text\n                                    editable: true, \n                                    alignment: go.Spot.Center\n                                },\n                                new go.Binding(\"text\", \"text\").makeTwoWay())\n                        ),\n                        $$(go.Placeholder, // create a placeholder to represent the area where the contents of the group are\n                            { \n                                padding: new go.Margin(0, 5) \n                            }\n                        )\n                    )\n            );\n\n            myDiagram.nodeTemplateMap.add(\"concept\", conceptNodeTemplate);\n            myDiagram.nodeTemplateMap.add(\"relation\", relationNodeTemplate);\n            \n            myDiagram.linkTemplateMap.add(\"normal\", normalLinkTemplate);\n            myDiagram.linkTemplateMap.add(\"or\", orLinkTemplate);\n            \n            myDiagram.groupTemplateMap.add(\"map\", mapTemplate);\n    }\n\n    edit(n) {\n        this.versionService.setCurrentLoadVersion(this.versionList[n]);\n        this.router.navigate(['edit', 'cmap']);\n    }\n    next() {\n        this.count++;\n        this.count >= this.images.length ? this.count = 0 : {} ;\n    }\n    previus() {\n        this.count--;\n        this.count < 0 ? this.count = this.images.length - 1 : {} ;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../app.module';\nimport { ViewRoutes } from './view.routing';\nimport { NouisliderModule } from 'ng2-nouislider';\nimport { TagInputModule } from 'ngx-chips';\nimport { ViewMapComponent } from './map/viewmap.component';\nimport { ViewMapVersionsComponent } from './map/versions/viewmapversions.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ViewRoutes),\n    FormsModule,\n    ReactiveFormsModule,\n    NouisliderModule,\n    TagInputModule,\n    MaterialModule\n  ],\n  declarations: [\n    ViewMapComponent,\n    ViewMapVersionsComponent\n  ]\n})\n\nexport class ViewModule {}\n","import { Routes } from '@angular/router';\nimport { ViewMapComponent } from './map/viewmap.component';\nimport { ViewMapVersionsComponent } from './map/versions/viewmapversions.component';\n\n\nexport const ViewRoutes: Routes = [\n    {\n      path: '',\n      redirectTo: '/view/map',\n      pathMatch: 'full'\n    },\n    {\n      path: '',\n      children: [{\n            path: 'map',\n            children:[\n              {\n                path:'',\n                component: ViewMapComponent\n              },\n              {\n                path: 'versions',\n                component: ViewMapVersionsComponent\n              }\n            ]\n        }\n      ]\n    }\n];\n"],"sourceRoot":""}